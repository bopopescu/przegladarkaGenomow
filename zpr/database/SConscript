from baza import DatabaseGenome
import os

Import('env')
Import('DATABASE_ROOT_FILES')

NAME_USER_DB = 'zpr'
NAME_DB = 'zpr'
PASSWD_DB = 'zpr'
ROBOCZY_DB = 'ogorek_roboczy'
MARKER_XLS = 'Cucumber_scaffold_markers.xls'
OGOREK_ROBOCZY_BACKUP = '17.11.2012-cucumber_plain.backup'

marker_xls_path = os.path.join(DATABASE_ROOT_FILES, MARKER_XLS)
connect_string = "dbname='{}' user='{}' host='localhost' password='{}'".format(ROBOCZY_DB, NAME_USER_DB, PASSWD_DB)
#"dbname='ogorek_roboczy' user='zpr' host='localhost' password='zpr'"

baza = DatabaseGenome(connect_string, marker_xls_path)
#baza = DatabaseGenome()

if env['build_db'] == 1:
    print 'BUILD_DB'
    baza.create()

elif env['clear_db'] == 1:
    print 'CLEAR_DB'
    baza.delete()

elif env['restore_ogorek_roboczy'] == 1:
    print 'RESTORE_OGOREK_ROBOCZY'
    backup_path = os.path.join(DATABASE_ROOT_FILES, OGOREK_ROBOCZY_BACKUP)

    if OGOREK_ROBOCZY_BACKUP in os.listdir(DATABASE_ROOT_FILES):
        os.system('psql -U {} -d {} -f {}'.format(NAME_USER_DB, ROBOCZY_DB, backup_path))
    else:
        print "ERROR : brak potrzebnego backupu {} w ".format(OGOREK_ROBOCZY_BACKUP), DATABASE_ROOT_FILES


elif env['test'] == 1:
    if OGOREK_ROBOCZY_BACKUP in os.listdir(DATABASE_ROOT_FILES):
        print 'JEA', baza.CONNECT_STRING, baza.MARKER_FILE_LOCATION
    else:
        print "ERROR: brak backupu {} w ".format(OGOREK_ROBOCZY_BACKUP), DATABASE_ROOT_FILES
        backup_path = os.path.join(DATABASE_ROOT_FILES, OGOREK_ROBOCZY_BACKUP)
        marker_path = os.path.join(DATABASE_ROOT_FILES, MARKER_XLS)
        print 'AAA', baza.CONNECT_STRING, baza.MARKER_FILE_LOCATION
